version: 1
shathel-stack:
  gav: org.s4s0l.shathel:shathel-stack-proxy:$version
  deployName: proxy
  enrichers:
    addNetwork:
        target: DEPS
        inline: |
          def services = compose.findServicesWithLabels("com.df.notify","true")
          def added = false
          def disabledMonitoring = env['SHATHEL_PROXY_DISABLE_MONITORING'] == "true"
          if (!services.isEmpty()){
              services.each {
                  def monitoringProxy = it.deploy.labels['com.df.usersSecret'] == 'monitoring'
                  if(disabledMonitoring && monitoringProxy){
                      LOGGER.info("Disabled proxy for service ${stack.name} as SHATHEL_PROXY_DISABLE_MONITORING=false")
                      it.deploy.labels['com.df.notify'] = 'false'
                      def selfReference = new org.s4s0l.shathel.commons.core.stack.StackReference("org.s4s0l.shathel:shathel-stack-proxy:any")
                      stack.dependencies.find {it.stackReference.isSameStack(selfReference)}.envs.keySet().each {
                          env.remove(it)
                      }
                  }else{
                      compose.addNetworkToService(it, "proxy_network")
                      if (monitoringProxy) {
                              it.deploy.labels['com.df.usersPassEncrypted'] = 'true'
                      }
                      added = true
                  }
              }
          }
          if (added){
            compose.addExternalNetwork("proxy_network")
          }
